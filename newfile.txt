Brainstorming in order to build over summer:

-Member log in page on site; accessible perhaps on the Contacts Page (separate page from currently existing Members Area?)
--Could create an additional members log in, but might be clunky

-Simple first page to upload file
Figure out FORM GET, where is it being sent or is it server based
--need to ask for tags: what field, interests, specialities, skills, etc.
--make this a requirement?
--is this necessary? perhaps parse these words from the documents (don't think they can be .pdf files though)

-browse files per speciality (as default) - these to be created/generated prior
-and will likely be user-provided
-state graduation year/brother class
-if no objective immediately clear, please state in textbox

* need option to re-submit and delete
* also provide ability to confirm submission (look over file to determine if this is what you would like)
* set as private/public (you can choose to have your resume in, but no one can look at it unless they specifically
email you to take a look)
* work with Fundraising person to work on Rodney's project in order to have companies look at their resumes
* do people want to be able to browse other entries?
* do we want two views? (prospective vs. staffed)

* possiblity to integrate with LI ability to print out paper or turn into PDF!
* consider possibility to "billboard" for job postings, though people may prefer to just use Facebook for this
* In fact... Facebook API!!! Is there a way to use tag words that can get filtered into the board? like #job #jobposting #networking
* though it would be a good way to have a database for past internships/jobs, and this could feed into the
Professional page via php

* or to make this simple (spend less time), just have them email to you. could work on site for other org...

PERFECT! PDF parser, available on github @ http://www.pdfparser.org/
--Load and parse objects and headers
--Extract metadata (author, description, keywords, ...)
--Extract text from ordered pages
--Support for compressed pdf (and not)
--Support of charset encoding (WinAnsi, MacRoman)
PSR-0 compliant (autoloader)
Compatible with Composer
PSR-1 compliant (code styling)
